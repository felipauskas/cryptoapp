{"ast":null,"code":"var _jsxFileName = \"/Users/felipedeleon/Desktop/CryptoApp/src/components/CoinTableData/index.js\";\nimport React from 'react';\nimport { convertToMoney } from '../../utils';\nimport { Name, CoinSlider, CoinDisplayDiv, Image, Rank, Hour, Price, Day, Week, VolumeMarket, CirculatingSupply, Last7d, ImgName, Volume, Market, Circulating, Supply } from './styles';\nimport millify from 'millify';\nimport SparklineChart from './chart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CoinTableData(props) {\n  const {\n    market_cap_rank,\n    image,\n    name,\n    current_price,\n    hourchange,\n    daychange,\n    weekchange,\n    total_volume,\n    market_cap,\n    circulating_supply,\n    total_supply,\n    sparkline_in_7d\n  } = props;\n  return /*#__PURE__*/_jsxDEV(CoinDisplayDiv, {\n    children: [/*#__PURE__*/_jsxDEV(Rank, {\n      children: market_cap_rank\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ImgName, {\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        src: image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Name, {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Price, {\n      children: convertToMoney.format(current_price)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Hour, {\n      isPositive: hourchange > 0,\n      children: [\"%\", hourchange.toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Day, {\n      isPositive: daychange > 0,\n      children: [\"%\", daychange.toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Week, {\n      isPositive: weekchange > 0,\n      children: [\"%\", weekchange.toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(VolumeMarket, {\n      children: [/*#__PURE__*/_jsxDEV(Volume, {\n        children: millify(total_volume)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Market, {\n        children: millify(market_cap)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CoinSlider, {\n        type: \"range\",\n        min: \"0\",\n        max: \"100\",\n        value: total_volume / market_cap * 100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CirculatingSupply, {\n      children: [/*#__PURE__*/_jsxDEV(Circulating, {\n        children: millify(circulating_supply)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Supply, {\n        children: total_supply ? millify(total_supply) : \"∞\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CoinSlider, {\n        type: \"range\",\n        min: \"0\",\n        max: \"100\",\n        value: circulating_supply / total_supply * 100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Last7d, {\n      children: /*#__PURE__*/_jsxDEV(SparklineChart, {\n        labels: sparkline_in_7d.price,\n        data: sparkline_in_7d.price\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n_c = CoinTableData;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoinTableData\");","map":{"version":3,"sources":["/Users/felipedeleon/Desktop/CryptoApp/src/components/CoinTableData/index.js"],"names":["React","convertToMoney","Name","CoinSlider","CoinDisplayDiv","Image","Rank","Hour","Price","Day","Week","VolumeMarket","CirculatingSupply","Last7d","ImgName","Volume","Market","Circulating","Supply","millify","SparklineChart","CoinTableData","props","market_cap_rank","image","name","current_price","hourchange","daychange","weekchange","total_volume","market_cap","circulating_supply","total_supply","sparkline_in_7d","format","toFixed","price"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { convertToMoney } from '../../utils';\nimport { Name, CoinSlider, CoinDisplayDiv, Image, Rank, Hour, Price, Day, Week, VolumeMarket, CirculatingSupply, Last7d, ImgName, Volume, Market, Circulating, Supply } from './styles';\nimport millify from 'millify';\nimport SparklineChart from './chart';\n\n\nexport default function CoinTableData(props) {\n    const {market_cap_rank, image, name, current_price, hourchange,\n            daychange, weekchange, total_volume, market_cap,\n            circulating_supply, total_supply, sparkline_in_7d} = props;\n    return(\n        <CoinDisplayDiv>\n            <Rank>{market_cap_rank}</Rank>\n            <ImgName>\n                <Image src={image}></Image>\n                <Name>{name}</Name>        \n            </ImgName>\n            <Price>{convertToMoney.format(current_price)}</Price>\n            <Hour isPositive={(hourchange > 0)}>%{hourchange.toFixed(2)}</Hour>\n            <Day isPositive={(daychange > 0)}>%{daychange.toFixed(2)}</Day>\n            <Week isPositive={(weekchange > 0)}>%{weekchange.toFixed(2)}</Week>\n            <VolumeMarket>\n                <Volume>{millify(total_volume)}</Volume>\n                <Market>{millify(market_cap)}</Market>\n                <CoinSlider type=\"range\" min=\"0\" max=\"100\" value={(total_volume/market_cap)*100}/>\n            </VolumeMarket>\n            <CirculatingSupply>\n                <Circulating>{millify(circulating_supply)}</Circulating>\n                <Supply>{(total_supply) ? millify(total_supply) : \"∞\"}</Supply>\n                <CoinSlider type=\"range\" min=\"0\" max=\"100\" value={(circulating_supply/total_supply)*100}/>\n            </CirculatingSupply>\n            <Last7d>\n                <SparklineChart labels={sparkline_in_7d.price} data={sparkline_in_7d.price}/>\n            </Last7d>\n        </CoinDisplayDiv>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}