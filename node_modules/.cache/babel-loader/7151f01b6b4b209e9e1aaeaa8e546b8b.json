{"ast":null,"code":"var _jsxFileName = \"/Users/felipedeleon/Desktop/CryptoApp/src/Components/CryptoChart/index.js\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport { Line } from \"react-chartjs-2\";\nimport { Chart, Filler } from \"chart.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class CryptoChart extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      isLoading: false,\n      hasError: false,\n      hasData: false,\n      dateLabels: [],\n      dailyPrice: []\n    };\n\n    this.getData = async () => {\n      this.setState({\n        isLoading: true,\n        hasError: false,\n        hasData: false\n      });\n\n      try {\n        const {\n          data\n        } = await axios(`https://api.coingecko.com/api/v3/coins/bitcoin/market_chart?vs_currency=usd&days=30&interval=daily`);\n        let dateLabels = data.prices.map(element => {\n          const date = new Date(element[0]).toLocaleString(\"en-gb\", {\n            day: \"numeric\",\n            month: \"2-digit\"\n          });\n          return date;\n        });\n        let dailyPrice = data.prices.map(element => element[1].toFixed(2));\n        dateLabels = dateLabels.slice(0, -1);\n        dailyPrice = dailyPrice.slice(0, -1);\n        this.setState({\n          isLoading: false,\n          dateLabels: dateLabels,\n          dailyPrice: dailyPrice,\n          hasData: true\n        });\n      } catch (error) {\n        console.log(error);\n        this.setState({\n          isLoading: false,\n          hasData: false,\n          hasError: true\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  componentDidUpdate() {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/felipedeleon/Desktop/CryptoApp/src/Components/CryptoChart/index.js"],"names":["React","Component","axios","Line","Chart","Filler","CryptoChart","state","isLoading","hasError","hasData","dateLabels","dailyPrice","getData","setState","data","prices","map","element","date","Date","toLocaleString","day","month","toFixed","slice","error","console","log","componentDidMount","componentDidUpdate","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,UAA9B;;AAEA,eAAe,MAAMC,WAAN,SAA0BL,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAC/CM,KAD+C,GACvC;AACJC,MAAAA,SAAS,EAAE,KADP;AAEJC,MAAAA,QAAQ,EAAE,KAFN;AAGJC,MAAAA,OAAO,EAAE,KAHL;AAIJC,MAAAA,UAAU,EAAE,EAJR;AAKJC,MAAAA,UAAU,EAAE;AALR,KADuC;;AAAA,SAS/CC,OAT+C,GASrC,YAAW;AACjB,WAAKC,QAAL,CAAc;AAACN,QAAAA,SAAS,EAAE,IAAZ;AAAkBC,QAAAA,QAAQ,EAAE,KAA5B;AAAmCC,QAAAA,OAAO,EAAE;AAA5C,OAAd;;AACA,UAAI;AACA,cAAM;AAAEK,UAAAA;AAAF,YAAW,MAAMb,KAAK,CAAE,oGAAF,CAA5B;AACA,YAAIS,UAAU,GAAGI,IAAI,CAACC,MAAL,CAAYC,GAAZ,CAAiBC,OAAD,IAAa;AAC1C,gBAAMC,IAAI,GAAG,IAAIC,IAAJ,CAASF,OAAO,CAAC,CAAD,CAAhB,EAAqBG,cAArB,CAAoC,OAApC,EAA6C;AACtDC,YAAAA,GAAG,EAAE,SADiD;AAEtDC,YAAAA,KAAK,EAAE;AAF+C,WAA7C,CAAb;AAIA,iBAAOJ,IAAP;AACH,SANgB,CAAjB;AAOA,YAAIP,UAAU,GAAGG,IAAI,CAACC,MAAL,CAAYC,GAAZ,CAAiBC,OAAD,IAAaA,OAAO,CAAC,CAAD,CAAP,CAAWM,OAAX,CAAmB,CAAnB,CAA7B,CAAjB;AACAb,QAAAA,UAAU,GAAGA,UAAU,CAACc,KAAX,CAAiB,CAAjB,EAAoB,CAAC,CAArB,CAAb;AACAb,QAAAA,UAAU,GAAGA,UAAU,CAACa,KAAX,CAAiB,CAAjB,EAAoB,CAAC,CAArB,CAAb;AACA,aAAKX,QAAL,CAAc;AAACN,UAAAA,SAAS,EAAE,KAAZ;AAAmBG,UAAAA,UAAU,EAAEA,UAA/B;AAA2CC,UAAAA,UAAU,EAAEA,UAAvD;AAAmEF,UAAAA,OAAO,EAAE;AAA5E,SAAd;AACH,OAbD,CAcA,OAAOgB,KAAP,EAAc;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,aAAKZ,QAAL,CAAc;AAACN,UAAAA,SAAS,EAAE,KAAZ;AAAmBE,UAAAA,OAAO,EAAE,KAA5B;AAAmCD,UAAAA,QAAQ,EAAE;AAA7C,SAAd;AACH;AACJ,KA7B8C;AAAA;;AA+B/CoB,EAAAA,iBAAiB,GAAG;AAChB,SAAKhB,OAAL;AACH;;AAEDiB,EAAAA,kBAAkB,GAAG,CACpB;;AAGDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AA7C8C","sourcesContent":["import React, { Component } from 'react'\nimport axios from \"axios\";\nimport { Line } from \"react-chartjs-2\";\nimport { Chart, Filler } from \"chart.js\";\n\nexport default class CryptoChart extends Component {\n    state = {\n        isLoading: false,\n        hasError: false,\n        hasData: false,\n        dateLabels: [],\n        dailyPrice: [],\n    }\n\n    getData = async() => {\n        this.setState({isLoading: true, hasError: false, hasData: false});\n        try {\n            const { data } = await axios(`https://api.coingecko.com/api/v3/coins/bitcoin/market_chart?vs_currency=usd&days=30&interval=daily`);\n            let dateLabels = data.prices.map((element) => {\n                const date = new Date(element[0]).toLocaleString(\"en-gb\", {\n                    day: \"numeric\",\n                    month: \"2-digit\"\n                });\n                return date;\n            });\n            let dailyPrice = data.prices.map((element) => element[1].toFixed(2));\n            dateLabels = dateLabels.slice(0, -1);\n            dailyPrice = dailyPrice.slice(0, -1);\n            this.setState({isLoading: false, dateLabels: dateLabels, dailyPrice: dailyPrice, hasData: true})\n        }\n        catch (error) {\n            console.log(error);\n            this.setState({isLoading: false, hasData: false, hasError: true})\n        }\n    }\n\n    componentDidMount() {\n        this.getData();\n    }\n\n    componentDidUpdate() {\n    }\n\n\n    render() {\n        return (\n            <div>\n                \n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}